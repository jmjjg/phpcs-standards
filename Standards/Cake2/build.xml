<?xml version="1.0" encoding="UTF-8"?>
<project name="Cake2" default="build" basedir=".">
	<property name="build" value="tmp/build" />
	<property name="api" value="${build}/api" />
	<property name="logs" value="${build}/logs" />
	<property name="phpcb" value="${build}/phpcb" />
	<property name="unit_tests" value="${build}/unit_tests" />

	<target name="php-lint">
		<apply executable="php" failonerror="on" logerror="on">
			<arg line="-l"/>
			<fileset dir="." includes="**/*.php" />
		</apply>
	</target>

	<target name="xml-lint">
		<apply executable="xmllint" failonerror="on" logerror="on">
			<arg line="--noout"/>
			<fileset
				dir="."
				includes="**/*.xml,**/*.xsl"/>
		</apply>
	</target>

	<target name="lint" depends="php-lint,xml-lint" />

	<target name="clear">
        <delete dir="${build}" verbose="true" />
	</target>

	<target name="clean" depends="clear">
		<mkdir dir="${build}" />
		<mkdir dir="${api}" />
		<mkdir dir="${logs}" />
		<mkdir dir="${unit_tests}" />
	</target>

	<target name="unit_tests" depends="clean">
		<property name="result" value="${unit_tests}/Cake2.xml" />
		<property name="expected" value="tests/expected/Cake2.xml" />

		<exec executable="phpcs" failonerror="false">
			<arg line="--standard=${basedir}/tests/ruleset.xml
					   --report-checkstyle=${result}
                       ${basedir}/tests/files/"
			/>
		</exec>

		<replaceregexp file="${result}"
					   match="name=&quot;.*/tests/files/"
					   replace="name=&quot;tests/files/"
                       flags="g"/>

		<replaceregexp file="${result}"
					   match="version=&quot;2.[0-9].[0-9]&quot;"
					   replace="version=&quot;2.x.x&quot;"
                       flags="g"/>

		<exec executable="diff" failonerror="true">
			<arg line="${expected} ${result}" />
		</exec>
	</target>

	<target name="phpcs" depends="clean">
		<exec executable="phpcs" failonerror="false">
			<arg line="--standard=phpcs.xml
                       --runtime-set testVersion 5.3-7.0
					   --report=source
					   --report-checkstyle=${logs}/phpcs.xml
					   --extensions=php
					   --ignore=**/tests/**,**/tmp/**
                       ${basedir}"
			/>
		</exec>
	</target>

	<target name="phpmd" depends="clean">
		<exec executable="phpmd" failonerror="false">
			<arg line="Sniffs
                       xml
                       phpmd.xml
					   --exclude */tests/files/*,*/tmp/*
                       --suffixes=.php
                       --reportfile ${logs}/phpmd.xml" />
		</exec>
	</target>

	<target name="phpcpd" depends="clean">
		<exec executable="phpcpd" failonerror="false">
			<arg line="--log-pmd ${logs}/phpcpd.xml
				--names *.php
                --exclude */tests/files/*,*/tmp/*
				." />
		</exec>
	</target>

	<target name="phpdoc" depends="clean">
		<exec executable="phpdoc" failonerror="false">
			<arg line="--title '${ant.project.name}'
				-t ${api}
				-i */tests/files/*,*/tmp/*
				-d ."/>
			</exec>
	</target>

	<target name="phpcb" depends="clean">
		<exec executable="phpcb" failonerror="false">
			<arg line="--log ${logs}
				--source .
				-E /\/(tests\/files|tmp)\//
				--output ${phpcb}
				--crapThreshold=10
			." />
		</exec>
	</target>

	<target name="build" depends="clean,lint,unit_tests" />
	<target name="quality" depends="clean,lint,unit_tests,phpcs,phpmd,phpcpd,phpdoc,phpcb" />
</project>